package com.ardium.pvp.client.models.blocks;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import org.lwjgl.opengl.GL11;

/**
 * ModelArdiumWorkbench - LÃ©rog
 * Created using Tabula 4.1.1
 */
public final class ModelArdiumWorkbench extends ModelBase {
    private final ModelRenderer Base;
    private final ModelRenderer AccentBas;
    private final ModelRenderer AccentHaut;
    private final ModelRenderer PtiteBase;
    private final ModelRenderer Losange;
    private final ModelRenderer Coin1A;
    private final ModelRenderer Coin1D;
    private final ModelRenderer Coin1B;
    private final ModelRenderer Coin1C;
    private final ModelRenderer Coin2A;
    private final ModelRenderer Coin2B;
    private final ModelRenderer Coin2C;
    private final ModelRenderer Coin2D;
    private final ModelRenderer Coin3A;
    private final ModelRenderer Coin3B;
    private final ModelRenderer Coin3C;
    private final ModelRenderer Coin3D;
    private final ModelRenderer CrateA1;
    private final ModelRenderer CrateA2;
    private final ModelRenderer CrateB1;
    private final ModelRenderer CrateB2;
    private final ModelRenderer Tige;
    private final ModelRenderer Bouchon;
    private final ModelRenderer FormeA;
    private final ModelRenderer FormeB;
    private final ModelRenderer FormeC;
    private final ModelRenderer FormeD;
    private final ModelRenderer CointerA;
    private final ModelRenderer CointerB;
    private final ModelRenderer CointerC;
    private final ModelRenderer CointerD;
    private final ModelRenderer Trigone1;
    private final ModelRenderer Trigone2;
    private final ModelRenderer Trigone3;
    private final ModelRenderer Trigone4;
    private final ModelRenderer Verticale1;
    private final ModelRenderer Verticale2;
    private final ModelRenderer Verticale3;
    private final ModelRenderer Verticale4;

    public ModelArdiumWorkbench() {
        this.textureWidth = 64;
        this.textureHeight = 64;
        this.CointerA = new ModelRenderer (this, 22, 27);
        this.CointerA.setRotationPoint (0.0F, 14.41F, 0.0F);
        this.CointerA.addBox (5.0F, 0.0F, 5.0F, 2, 1, 2, 0.0F);
        this.CointerD = new ModelRenderer (this, 22, 27);
        this.CointerD.setRotationPoint (0.0F, 14.41F, 0.0F);
        this.CointerD.addBox (5.0F, 0.0F, 5.0F, 2, 1, 2, 0.0F);
        this.setRotateAngle (CointerD, 0.0F, -1.5707963267948966F, 0.0F);
        this.Coin2A = new ModelRenderer (this, 0, 2);
        this.Coin2A.setRotationPoint (7.0F, 14.0F, 7.0F);
        this.Coin2A.addBox (0.0F, 0.0F, 0.0F, 1, 9, 1, 0.0F);
        this.FormeC = new ModelRenderer (this, 16, 28);
        this.FormeC.setRotationPoint (-1.0F, 7.7F, 0.0F);
        this.FormeC.addBox (0.0F, 0.0F, 0.0F, 2, 10, 1, 0.0F);
        this.setRotateAngle (FormeC, 0.7853981633974483F, 0.0F, 0.0F);
        this.Coin3D = new ModelRenderer (this, 0, 0);
        this.Coin3D.setRotationPoint (-7.0F, 14.0F, 7.0F);
        this.Coin3D.addBox (0.0F, 0.0F, 0.0F, 14, 1, 1, 0.0F);
        this.PtiteBase = new ModelRenderer (this, 9, 46);
        this.PtiteBase.setRotationPoint (0.0F, 13.8F, 0.0F);
        this.PtiteBase.addBox (-2.0F, 0.0F, -2.0F, 4, 1, 4, 0.0F);
        this.setRotateAngle (PtiteBase, 0.0F, 0.7853981633974483F, 0.0F);
        this.AccentBas = new ModelRenderer (this, 1, 24);
        this.AccentBas.setRotationPoint (-7.5F, 19.8F, -7.5F);
        this.AccentBas.addBox (0.0F, 0.0F, 0.0F, 15, 2, 15, 0.0F);
        this.AccentHaut = new ModelRenderer (this, 1, 24);
        this.AccentHaut.setRotationPoint (-7.5F, 16.2F, -7.5F);
        this.AccentHaut.addBox (0.0F, 0.0F, 0.0F, 15, 2, 15, 0.0F);
        this.CrateA2 = new ModelRenderer (this, 24, 45);
        this.CrateA2.setRotationPoint (5.7F, 23.01F, -7.0F);
        this.CrateA2.addBox (0.0F, 0.0F, 0.0F, 2, 1, 18, 0.0F);
        this.setRotateAngle (CrateA2, 0.0F, -0.7853981633974483F, 0.0F);
        this.Coin1B = new ModelRenderer (this, 6, 46);
        this.Coin1B.setRotationPoint (6.0F, 23.0F, -8.0F);
        this.Coin1B.addBox (0.0F, 0.0F, 0.0F, 2, 1, 16, 0.0F);
        this.Trigone2 = new ModelRenderer (this, 53, 22);
        this.Trigone2.setRotationPoint (0.0F, 14.0F, 0.0F);
        this.Trigone2.addBox (5.6F, 0.0F, -4.3F, 1, 1, 9, 0.0F);
        this.setRotateAngle (Trigone2, 0.0F, 0.7853981633974483F, 0.0F);
        this.FormeA = new ModelRenderer (this, 16, 27);
        this.FormeA.setRotationPoint (0.0F, 7.7F, -1.0F);
        this.FormeA.addBox (0.0F, 0.0F, 0.0F, 1, 10, 2, 0.0F);
        this.setRotateAngle (FormeA, 0.0F, 0.0F, -0.7853981633974483F);
        this.CointerC = new ModelRenderer (this, 22, 27);
        this.CointerC.setRotationPoint (0.0F, 14.41F, 0.0F);
        this.CointerC.addBox (5.0F, 0.0F, 5.0F, 2, 1, 2, 0.0F);
        this.setRotateAngle (CointerC, 0.0F, 3.141592653589793F, 0.0F);
        this.Coin3B = new ModelRenderer (this, 0, 0);
        this.Coin3B.setRotationPoint (-7.0F, 14.0F, -8.0F);
        this.Coin3B.addBox (0.0F, 0.0F, 0.0F, 14, 1, 1, 0.0F);
        this.FormeB = new ModelRenderer (this, 16, 27);
        this.FormeB.setRotationPoint (-0.7F, 7.0F, -1.0F);
        this.FormeB.addBox (0.0F, 0.0F, 0.0F, 1, 10, 2, 0.0F);
        this.setRotateAngle (FormeB, 0.0F, 0.0F, 0.7853981633974483F);
        this.Coin1A = new ModelRenderer (this, 6, 46);
        this.Coin1A.setRotationPoint (-8.0F, 23.0F, -8.0F);
        this.Coin1A.addBox (0.0F, 0.0F, 0.0F, 2, 1, 16, 0.0F);
        this.FormeD = new ModelRenderer (this, 16, 28);
        this.FormeD.setRotationPoint (-1.0F, 7.0F, -0.7F);
        this.FormeD.addBox (0.0F, 0.0F, 0.0F, 2, 10, 1, 0.0F);
        this.setRotateAngle (FormeD, -0.7853981633974483F, 0.0F, 0.0F);
        this.Coin2C = new ModelRenderer (this, 0, 2);
        this.Coin2C.setRotationPoint (-8.0F, 14.0F, -8.0F);
        this.Coin2C.addBox (0.0F, 0.0F, 0.0F, 1, 9, 1, 0.0F);
        this.CrateB2 = new ModelRenderer (this, 24, 45);
        this.CrateB2.setRotationPoint (5.7F, 14.41F, -7.0F);
        this.CrateB2.addBox (0.0F, 0.0F, 0.0F, 2, 1, 18, 0.0F);
        this.setRotateAngle (CrateB2, 0.0F, -0.7853981633974483F, 0.0F);
        this.Verticale3 = new ModelRenderer (this, 16, 44);
        this.Verticale3.setRotationPoint (0.0F, 8.2F, 0.0F);
        this.Verticale3.addBox (6.8F, -3.2F, -9.9F, 1, 17, 1, 0.0F);
        this.setRotateAngle (Verticale3, 1.0471975511965976F, 3.141592653589793F, 0.0F);
        this.Bouchon = new ModelRenderer (this, 60, 29);
        this.Bouchon.setRotationPoint (-1.0F, 7.3F, -1.0F);
        this.Bouchon.addBox (0.0F, 0.0F, 0.0F, 2, 1, 2, 0.0F);
        this.CointerB = new ModelRenderer (this, 22, 27);
        this.CointerB.setRotationPoint (0.0F, 14.41F, 0.0F);
        this.CointerB.addBox (5.0F, 0.0F, 5.0F, 2, 1, 2, 0.0F);
        this.setRotateAngle (CointerB, 0.0F, 1.5707963267948966F, 0.0F);
        this.Verticale1 = new ModelRenderer (this, 16, 44);
        this.Verticale1.setRotationPoint (0.0F, 8.2F, 0.0F);
        this.Verticale1.addBox (6.8F, -3.2F, -9.9F, 1, 17, 1, 0.0F);
        this.setRotateAngle (Verticale1, 1.0471975511965976F, 0.0F, 0.0F);
        this.Tige = new ModelRenderer (this, 0, 41);
        this.Tige.setRotationPoint (-1.4F, 7.8F, 0.1F);
        this.Tige.addBox (0.0F, 0.0F, 0.0F, 2, 7, 2, 0.0F);
        this.setRotateAngle (Tige, 0.0F, 0.7853981633974483F, 0.0F);
        this.Coin1D = new ModelRenderer (this, 8, 41);
        this.Coin1D.setRotationPoint (-7.0F, 23.0F, 6.0F);
        this.Coin1D.addBox (0.0F, 0.0F, 0.0F, 14, 1, 2, 0.0F);
        this.Coin2B = new ModelRenderer (this, 0, 2);
        this.Coin2B.setRotationPoint (7.0F, 14.0F, -8.0F);
        this.Coin2B.addBox (0.0F, 0.0F, 0.0F, 1, 9, 1, 0.0F);
        this.Coin1C = new ModelRenderer (this, 8, 41);
        this.Coin1C.setRotationPoint (-7.0F, 23.0F, -8.0F);
        this.Coin1C.addBox (0.0F, 0.0F, 0.0F, 14, 1, 2, 0.0F);
        this.Trigone1 = new ModelRenderer (this, 53, 22);
        this.Trigone1.setRotationPoint (0.0F, 14.0F, 0.0F);
        this.Trigone1.addBox (5.6F, 0.0F, -4.3F, 1, 1, 9, 0.0F);
        this.setRotateAngle (Trigone1, 0.0F, -0.7853981633974483F, 0.0F);
        this.Base = new ModelRenderer (this, 0, 2);
        this.Base.setRotationPoint (-7.0F, 15.0F, -7.0F);
        this.Base.addBox (-0.01F, 0.0F, -0.01F, 14, 8, 14, 0.0F);
        this.Coin3C = new ModelRenderer (this, 48, 17);
        this.Coin3C.setRotationPoint (-8.0F, 14.0F, -7.0F);
        this.Coin3C.addBox (0.0F, 0.0F, 0.0F, 1, 1, 14, 0.0F);
        this.Verticale4 = new ModelRenderer (this, 16, 44);
        this.Verticale4.setRotationPoint (0.0F, 8.2F, 0.0F);
        this.Verticale4.addBox (6.8F, -3.2F, 8.9F, 1, 17, 1, 0.0F);
        this.setRotateAngle (Verticale4, -1.0471975511965976F, 4.71238898038469F, 0.0F);
        this.Coin2D = new ModelRenderer (this, 0, 2);
        this.Coin2D.setRotationPoint (-8.0F, 14.0F, 7.0F);
        this.Coin2D.addBox (0.0F, 0.0F, 0.0F, 1, 9, 1, 0.0F);
        this.CrateB1 = new ModelRenderer (this, 24, 45);
        this.CrateB1.setRotationPoint (-7.1F, 14.41F, -5.6F);
        this.CrateB1.addBox (0.0F, 0.0F, 0.0F, 2, 1, 18, 0.0F);
        this.setRotateAngle (CrateB1, 0.0F, 0.7853981633974483F, 0.0F);
        this.Verticale2 = new ModelRenderer (this, 16, 44);
        this.Verticale2.setRotationPoint (0.0F, 8.2F, 0.0F);
        this.Verticale2.addBox (6.8F, -3.2F, 8.9F, 1, 17, 1, 0.0F);
        this.setRotateAngle (Verticale2, -1.0471975511965976F, 1.5707963267948966F, 0.0F);
        this.Trigone3 = new ModelRenderer (this, 53, 22);
        this.Trigone3.setRotationPoint (0.0F, 14.0F, 0.0F);
        this.Trigone3.addBox (5.6F, 0.0F, -4.3F, 1, 1, 9, 0.0F);
        this.setRotateAngle (Trigone3, 0.0F, -2.356194490192345F, 0.0F);
        this.Losange = new ModelRenderer (this, 9, 46);
        this.Losange.setRotationPoint (0.0F, 6.9F, 0.0F);
        this.Losange.addBox (-1.5F, 0.0F, -1.5F, 3, 1, 3, 0.0F);
        this.setRotateAngle (Losange, 0.0F, 0.7853981633974483F, 0.0F);
        this.Trigone4 = new ModelRenderer (this, 53, 22);
        this.Trigone4.setRotationPoint (0.0F, 14.0F, 0.0F);
        this.Trigone4.addBox (5.6F, 0.0F, -4.3F, 1, 1, 9, 0.0F);
        this.setRotateAngle (Trigone4, 0.0F, 2.356194490192345F, 0.0F);
        this.CrateA1 = new ModelRenderer (this, 24, 45);
        this.CrateA1.setRotationPoint (-7.1F, 23.01F, -5.6F);
        this.CrateA1.addBox (0.0F, 0.0F, 0.0F, 2, 1, 18, 0.0F);
        this.setRotateAngle (CrateA1, 0.0F, 0.7853981633974483F, 0.0F);
        this.Coin3A = new ModelRenderer (this, 48, 17);
        this.Coin3A.setRotationPoint (7.0F, 14.0F, -7.0F);
        this.Coin3A.addBox (0.0F, 0.0F, 0.0F, 1, 1, 14, 0.0F);
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
        this.CointerA.render (f5);
        this.CointerD.render (f5);
        this.Coin2A.render (f5);
        this.FormeC.render (f5);
        this.Coin3D.render (f5);
        GL11.glPushMatrix ();
        GL11.glTranslatef (this.PtiteBase.offsetX, this.PtiteBase.offsetY, this.PtiteBase.offsetZ);
        GL11.glTranslatef (this.PtiteBase.rotationPointX * f5, this.PtiteBase.rotationPointY * f5, this.PtiteBase.rotationPointZ * f5);
        GL11.glScaled (1.0D, 1.4D, 1.0D);
        GL11.glTranslatef (-this.PtiteBase.offsetX, -this.PtiteBase.offsetY, -this.PtiteBase.offsetZ);
        GL11.glTranslatef (-this.PtiteBase.rotationPointX * f5, -this.PtiteBase.rotationPointY * f5, -this.PtiteBase.rotationPointZ * f5);
        this.PtiteBase.render (f5);
        GL11.glPopMatrix ();
        this.AccentBas.render (f5);
        this.AccentHaut.render (f5);
        GL11.glPushMatrix ();
        GL11.glTranslatef (this.CrateA2.offsetX, this.CrateA2.offsetY, this.CrateA2.offsetZ);
        GL11.glTranslatef (this.CrateA2.rotationPointX * f5, this.CrateA2.rotationPointY * f5, this.CrateA2.rotationPointZ * f5);
        GL11.glScaled (1.0D, 0.5D, 1.0D);
        GL11.glTranslatef (-this.CrateA2.offsetX, -this.CrateA2.offsetY, -this.CrateA2.offsetZ);
        GL11.glTranslatef (-this.CrateA2.rotationPointX * f5, -this.CrateA2.rotationPointY * f5, -this.CrateA2.rotationPointZ * f5);
        this.CrateA2.render (f5);
        GL11.glPopMatrix ();
        this.Coin1B.render (f5);
        this.Trigone2.render (f5);
        this.FormeA.render (f5);
        this.CointerC.render (f5);
        this.Coin3B.render (f5);
        this.FormeB.render (f5);
        this.Coin1A.render (f5);
        this.FormeD.render (f5);
        this.Coin2C.render (f5);
        GL11.glPushMatrix ();
        GL11.glTranslatef (this.CrateB2.offsetX, this.CrateB2.offsetY, this.CrateB2.offsetZ);
        GL11.glTranslatef (this.CrateB2.rotationPointX * f5, this.CrateB2.rotationPointY * f5, this.CrateB2.rotationPointZ * f5);
        GL11.glScaled (1.0D, 0.5D, 1.0D);
        GL11.glTranslatef (-this.CrateB2.offsetX, -this.CrateB2.offsetY, -this.CrateB2.offsetZ);
        GL11.glTranslatef (-this.CrateB2.rotationPointX * f5, -this.CrateB2.rotationPointY * f5, -this.CrateB2.rotationPointZ * f5);
        this.CrateB2.render (f5);
        GL11.glPopMatrix ();
        this.Verticale3.render (f5);
        this.Bouchon.render (f5);
        this.CointerB.render (f5);
        this.Verticale1.render (f5);
        this.Tige.render (f5);
        this.Coin1D.render (f5);
        this.Coin2B.render (f5);
        this.Coin1C.render (f5);
        this.Trigone1.render (f5);
        GL11.glPushMatrix ();
        GL11.glTranslatef (this.Base.offsetX, this.Base.offsetY, this.Base.offsetZ);
        GL11.glTranslatef (this.Base.rotationPointX * f5, this.Base.rotationPointY * f5, this.Base.rotationPointZ * f5);
        GL11.glScaled (1.02D, 1.0D, 1.02D);
        GL11.glTranslatef (-this.Base.offsetX, -this.Base.offsetY, -this.Base.offsetZ);
        GL11.glTranslatef (-this.Base.rotationPointX * f5, -this.Base.rotationPointY * f5, -this.Base.rotationPointZ * f5);
        this.Base.render (f5);
        GL11.glPopMatrix ();
        this.Coin3C.render (f5);
        this.Verticale4.render (f5);
        this.Coin2D.render (f5);
        GL11.glPushMatrix ();
        GL11.glTranslatef (this.CrateB1.offsetX, this.CrateB1.offsetY, this.CrateB1.offsetZ);
        GL11.glTranslatef (this.CrateB1.rotationPointX * f5, this.CrateB1.rotationPointY * f5, this.CrateB1.rotationPointZ * f5);
        GL11.glScaled (1.0D, 0.5D, 1.0D);
        GL11.glTranslatef (-this.CrateB1.offsetX, -this.CrateB1.offsetY, -this.CrateB1.offsetZ);
        GL11.glTranslatef (-this.CrateB1.rotationPointX * f5, -this.CrateB1.rotationPointY * f5, -this.CrateB1.rotationPointZ * f5);
        this.CrateB1.render (f5);
        GL11.glPopMatrix ();
        this.Verticale2.render (f5);
        this.Trigone3.render (f5);
        GL11.glPushMatrix ();
        GL11.glTranslatef (this.Losange.offsetX, this.Losange.offsetY, this.Losange.offsetZ);
        GL11.glTranslatef (this.Losange.rotationPointX * f5, this.Losange.rotationPointY * f5, this.Losange.rotationPointZ * f5);
        GL11.glScaled (1.1D, 1.0D, 1.7D);
        GL11.glTranslatef (-this.Losange.offsetX, -this.Losange.offsetY, -this.Losange.offsetZ);
        GL11.glTranslatef (-this.Losange.rotationPointX * f5, -this.Losange.rotationPointY * f5, -this.Losange.rotationPointZ * f5);
        this.Losange.render (f5);
        GL11.glPopMatrix ();
        this.Trigone4.render (f5);
        GL11.glPushMatrix ();
        GL11.glTranslatef (this.CrateA1.offsetX, this.CrateA1.offsetY, this.CrateA1.offsetZ);
        GL11.glTranslatef (this.CrateA1.rotationPointX * f5, this.CrateA1.rotationPointY * f5, this.CrateA1.rotationPointZ * f5);
        GL11.glScaled (1.0D, 0.5D, 1.0D);
        GL11.glTranslatef (-this.CrateA1.offsetX, -this.CrateA1.offsetY, -this.CrateA1.offsetZ);
        GL11.glTranslatef (-this.CrateA1.rotationPointX * f5, -this.CrateA1.rotationPointY * f5, -this.CrateA1.rotationPointZ * f5);
        this.CrateA1.render (f5);
        GL11.glPopMatrix ();
        this.Coin3A.render (f5);
    }

    /**
     * This is a helper function from Tabula to set the rotation of model parts
     */
    private void setRotateAngle(ModelRenderer modelRenderer, float x, float y, float z) {
        modelRenderer.rotateAngleX = x;
        modelRenderer.rotateAngleY = y;
        modelRenderer.rotateAngleZ = z;
    }
}
